//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ProjectileHitComponent projectileHit { get { return (ProjectileHitComponent)GetComponent(GameComponentsLookup.ProjectileHit); } }
    public bool hasProjectileHit { get { return HasComponent(GameComponentsLookup.ProjectileHit); } }

    public void AddProjectileHit(bool newWasHit) {
        var index = GameComponentsLookup.ProjectileHit;
        var component = CreateComponent<ProjectileHitComponent>(index);
        component.wasHit = newWasHit;
        AddComponent(index, component);
    }

    public void ReplaceProjectileHit(bool newWasHit) {
        var index = GameComponentsLookup.ProjectileHit;
        var component = CreateComponent<ProjectileHitComponent>(index);
        component.wasHit = newWasHit;
        ReplaceComponent(index, component);
    }

    public void RemoveProjectileHit() {
        RemoveComponent(GameComponentsLookup.ProjectileHit);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherProjectileHit;

    public static Entitas.IMatcher<GameEntity> ProjectileHit {
        get {
            if (_matcherProjectileHit == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ProjectileHit);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherProjectileHit = matcher;
            }

            return _matcherProjectileHit;
        }
    }
}
